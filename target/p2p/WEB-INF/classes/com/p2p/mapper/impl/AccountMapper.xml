<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.p2p.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.p2p.model.Account" >
    <constructor >
      <idArg column="aid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="uname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="amount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="avail" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="freeze" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="wait" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="astatus" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    aid, uname, amount, avail, freeze, wait, astatus
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account
    where aid = #{aid,jdbcType=INTEGER}
  </select>
    <select id="QueryAccount" resultType="com.p2p.model.Account" parameterType="com.p2p.model.Account">
      select * from account where uname = #{uname}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.p2p.model.Account" >
    insert into account (aid, uname, amount, 
      avail, freeze, wait, astatus
      )
    values (#{aid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, 
      #{avail,jdbcType=INTEGER}, #{freeze,jdbcType=INTEGER}, #{wait,jdbcType=INTEGER}, #{astatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.p2p.model.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        aid,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="avail != null" >
        avail,
      </if>
      <if test="freeze != null" >
        freeze,
      </if>
      <if test="wait != null" >
        wait,
      </if>
      <if test="astatus != null" >
        astatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="avail != null" >
        #{avail,jdbcType=INTEGER},
      </if>
      <if test="freeze != null" >
        #{freeze,jdbcType=INTEGER},
      </if>
      <if test="wait != null" >
        #{wait,jdbcType=INTEGER},
      </if>
      <if test="astatus != null" >
        #{astatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.p2p.model.Account" >
    update account
    <set >
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="avail != null" >
        avail = #{avail,jdbcType=INTEGER},
      </if>
      <if test="freeze != null" >
        freeze = #{freeze,jdbcType=INTEGER},
      </if>
      <if test="wait != null" >
        wait = #{wait,jdbcType=INTEGER},
      </if>
      <if test="astatus != null" >
        astatus = #{astatus,jdbcType=INTEGER},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.p2p.model.Account" >
    update account
    set amount = #{amount},avail = #{avail},wait = #{wait}
    where uname = #{uname}
  </update>
  <update id="UpdateAccountAlipayMoney" parameterType="com.p2p.model.Account">
    update account
    set amount = amount+#{money},avail =avail+#{money}
    where uname = #{uname}
  </update>
</mapper>